---

- name: python | Include default vars 
  include_vars: "../vars/default.yml"


- name: python | Include os / distribution specific vars
  include_vars: "{{ item }}"
  with_first_found:                                   
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
    - "../vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_release | lower}}.yml"
    - "../vars/{{ ansible_distribution | lower}}.yml"
    - "../vars/{{ ansible_os_family | lower}}.yml"

- name: install required packages to build python versions
  become: yes
  package: 
    name:
      - "{{ make }}"
      - "{{ build_essential }}"
      - "{{ libssl_dev }}"
      - "{{ zlib1g_dev }}"
      - "{{ libbz2_dev }}"
      - "{{ libreadline_dev }}"
      - "{{ libsqlite3_dev }}"
      - "{{ wget }}"
      - "{{ curl }}"
      - "{{ llvm }}"
      - "{{ libncurses5_dev }}"
      - "{{ libncursesw5_dev }}"
      - "{{ xz_utils }}"
      - "{{ tk_dev }}"
      - "{{ libffi_dev }}"
      - "{{ liblzma_dev }}"
      - "{{ python_openssl }}"
    state: latest


- name: Clone pyenv
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ ansible_env.HOME }}/.pyenv"

- name: Clone pyenv-virtualenv
  git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    dest: "{{ ansible_env.HOME}}/.pyenv/plugins/pyenv-virtualenv"

- name: Clone pyenv-virtualenvwrapper
  git: 
    repo: https://github.com/pyenv/pyenv-virtualenvwrapper.git
    dest: "{{ ansible_env.HOME}}/.pyenv/plugins/pyenv-virtualenvwrapper"


- name: check if shell zshrc exists
  stat: 
    path: "{{ ansible_env.HOME }}/.zshrc"
  register: zshrc

- name: Add pyenv to path
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
      source $PYENV_ROOT/completions/pyenv.zsh
    marker: "# Ansible managed PYENV "
  when: zshrc.stat.exists == True

- name: "Install python {{ python_v3 }}"
  shell: |
    export PYENV_ROOT=$HOME/.pyenv
    export PATH=$PYENV_ROOT/bin:$PATH
    eval "$(pyenv init -)"
    pyenv install {{ python_v3 }}
    pyenv global {{ python_v3 }}
    pyenv rehash
  args:
    executable: /bin/bash
