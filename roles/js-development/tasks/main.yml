---
- name: Clone NVM
  git:
    repo: 'https://github.com/creationix/nvm.git' 
    dest: "{{ ansible_env.HOME }}/.nvm"
    update: yes
    force: no

- name: get new tags from remote
  shell: "git fetch --tags"
  args:
    chdir: "{{ ansible_env.HOME }}/.nvm"

- name: get latest tag name
  shell: "git describe --tags `git rev-list --tags --max-count=1`"
  args:
    chdir: "{{ ansible_env.HOME }}/.nvm"
  register: latest_tag

- name: switch to latest version 
  git:
    repo: https://github.com/creationix/nvm.git
    dest: "{{ ansible_env.HOME }}/.nvm"
    version: "{{ latest_tag.stdout }}"

- name: Install node latest and lts
  shell: >
    /bin/bash -c "source {{ ansible_env.HOME}}/.nvm/nvm.sh && nvm install node && nvm install --lts"
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/alias"

- name: Install Yarn
  shell: >
    curl -o- https://yarnpkg.com/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.yarn"

- name: Install global node modules
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && nvm use default && npm install -g typescript"

- name: check if shell zshrc exists
  stat: 
    path: "{{ ansible_env.HOME }}/.zshrc"
  register: zshrc

- name: Add nvm path to zsh
  lineinfile: >
    dest="{{ansible_env.HOME}}/.zshrc"
    line="source ~/.nvm/nvm.sh"
    create=yes
  when: zshrc.stat.exists == True


